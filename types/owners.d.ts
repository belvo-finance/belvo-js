export default Owner;
export type Response = import("../types/apiResponses").ownersResponse;
/**
 * @typedef { import("../types/apiResponses").ownersResponse } Response
 */
/**
 * An Owner represents the person who has access to a Link and
 * is the owner of all the Accounts inside the Link.
 * @extends Resource<Response>
 */
declare class Owner extends Resource<import("../types/apiResponses").ownersResponse> {
    constructor(session: any);
    /**
     * Retrieve owner information from a specific link.
     * @async
     * @param {string} link - UUID4 representation of a link Id.
     * @param {object} [options] - Optional parameters (`token`, `saveData`)
     * @param {string} [options.token] - The OTP token generated by the bank.
     * @param {boolean} [options.saveData] - Indicates whether or not to persist the data in Belvo. When set to `false`, the data won't be persisted.
     * @returns {Promise<Response>} Response
     * @throws {RequestError}
     */
    retrieve(link: string, options?: {
        token?: string;
        saveData?: boolean;
    }): Promise<Response>;
    #private;
}
import Resource from "./resources";
