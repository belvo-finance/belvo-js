export default Statement;
export type Response = import("../types/apiResponses").statementsResponse;
/**
 * @typedef { import("../types/apiResponses").statementsResponse } Response
 */
/**
 * A Statement contains a resume of monthly Transactions inside an Account.
 * @extends Resource<Response>
 */
declare class Statement extends Resource<import("../types/apiResponses").statementsResponse> {
    constructor(session: any);
    /**
     * Retrieve statements information from a specific banking link.
     *
     * @async
     * @param {string} link - UUID4 representation of a link Id.
     * @param {string} account - UUID4 representation of an account Id.
     * @param {number} year - The year you want to retrieve.
     * @param {number} month - The month you want to retrieve.
     * @param {object} [options] - Optional parameters (`token`, `saveData`, `attachPDF`)
     * @param {string} [options.token] - The OTP token generated by the bank.
     * @param {boolean} [options.saveData] - Indicates whether or not to persist the data in Belvo.
     * @param {boolean} [options.attachPDF] - If `true`, you will receive the PDF as a binary string.
     * @returns {Promise<Response>} Response
     * @throws {RequestError}
     */
    retrieve(link: string, account: string, year: number, month: number, options?: {
        token?: string;
        saveData?: boolean;
        attachPDF?: boolean;
    }): Promise<Response>;
    #private;
}
import Resource from "./resources";
