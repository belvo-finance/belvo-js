export default TaxReturn;
export type Response = import("../types/apiResponses").taxReturnsResponse;
/**
 * @typedef { import("../types/apiResponses").taxReturnsResponse } Response
 */
/**
 * Retrieve tax returns information from a specific fiscal link.
 * @extends Resource<Response>
 */
declare class TaxReturn extends Resource<import("../types/apiResponses").taxReturnsResponse> {
    constructor(session: any);
    /**
     * Retrieve tax returns information from a specific fiscal link.
     *
     * @async
     * @param {string} link - UUID4 representation of a `link` Id.
     * @param {string} yearFrom - Required year from, format is `YYYY-MM-DD`
     * @param {string} yearTo - Required year to, format is `YYYY-MM-DD`.
     * @param {object} [options] - Optional parameters (`token`, `saveData`, `attachPDF`)
     * @param {string} [options.token] - The OTP token generated by the bank.
     * @param {boolean} [options.saveData] - Indicates whether or not to persist the data in Belvo. When set to `false`, the data won't be persisted.
     * @param {boolean} [options.attachPDF] - When this is set to `true`, you will receive the PDF as a binary string in the response.
     * @returns {Promise<Response>} Response
     * @throws {RequestError}
     */
    retrieve(link: string, yearFrom: string, yearTo: string, options?: {
        token?: string;
        saveData?: boolean;
        attachPDF?: boolean;
    }): Promise<Response>;
    #private;
}
import Resource from "./resources";
